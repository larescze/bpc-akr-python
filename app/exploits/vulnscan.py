import shodan
from django.http import HttpResponse

# Shodan Rest API key
API_KEY = "eY6WEXyeE95XcmlQjARZZ4u6aO6xJGcF"
# Shodan Rest API initialization
shodan_api = shodan.Shodan(API_KEY)


def search(query, facets, limit):
    """
    Function search Shodan database with Shodan REST API
    :param query: Search query
    :param facets: Summarization list
    :param limit: Limit displayed results per page
    :return: Search results
    """
    # Wrap the request in a try/ except block to catch errors
    try:
        # Search Shodan with query and store results
        results = shodan_api.search(query, facets=facets, limit=limit)
        # Prepare query for vulnerability summarization
        vuln_query = query + ' has_vuln:true'
        # Get number of vulnerable results
        results['vuln'] = shodan_api.count(vuln_query)
        # Calculate percentage of vulnerable results
        results['total_vuln'] = round(results['vuln']['total'] / results['total'] * 100)
        # Calculate percentage of not vulnerable results
        results['total_not_vuln'] = 100 - results['total_vuln']
    except shodan.APIError as e:
        results = f'Error: {e}'
    finally:
        return results
